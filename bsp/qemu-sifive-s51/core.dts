/dts-v1/;
/ {
        #address-cells = <1>;
        #size-cells = <1>;
	/* Virtual platform based on HiFive1 Rev. B for with
	 *
	 * - RV64 core
	 * - secondary UART
	 * - HCA crypto accelerator
	 * - test finisher virtual device
	 * - more interrupt channels
	 * - larger RAM/ROM memory space
	 * - no PWM/I2C
	 * - single QSPI
	 *
	 * Compatible with qemu-system-riscv64 -machine sifive_e
	 */
        compatible = "sifive,qemu-sifive-s51";
        model = "sifive,qemu-sifive-s51";
        cpus {
                #address-cells = <1>;
                #size-cells = <0>;
                compatible = "sifive,fs510-g000";
                L6: cpu@0 {
                        clocks = <&hfclk>;
                        compatible = "riscv";
                        device_type = "cpu";
                        i-cache-block-size = <64>;
                        i-cache-sets = <128>;
                        i-cache-size = <16384>;
                        next-level-cache = <&spi0>;
                        reg = <0>;
                        riscv,isa = "rv64imac";
                        riscv,pmpregions = <8>;
                        sifive,itim = <&itim>;
                        sifive,dtim = <&dtim>;
                        status = "okay";
                        timebase-frequency = <16000000>;
                        hardware-exec-breakpoint-count = <4>;
                        hlic: interrupt-controller {
                                #interrupt-cells = <1>;
                                compatible = "riscv,cpu-intc";
                                interrupt-controller;
                        };
                };
        };
        soc {
                #address-cells = <1>;
                #size-cells = <1>;
                #clock-cells = <1>;
                compatible = "sifive,qemu-sifive-s51";
                ranges;
                local-external-interrupts-0 {
                        compatible = "sifive,local-external-interrupts0";
                        interrupt-parent = <&hlic>;
                        interrupts = <16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31>;
                };
                global-external-interrupts {
                        compatile = "sifive,global-external-interrupts0";
                        interrupt-parent = <&plic>;
                        interrupts = <1 2>;
                };
                hfclk: clock-0 {
                        #clock-cells = <0>;
                        compatible = "fixed-clock";
                        clock-frequency = <16000000>;
                };
                lfrosc: clock-1 {
                        #clock-cells = <0>;
                        compatible = "fixed-clock";
                        clock-frequency = <32768>;
                };
                debug-controller@0 {
                        compatible = "sifive,debug-011", "riscv,debug-011";
                        interrupts-extended = <&hlic 65535>;
                        reg = <0x0 0x1000>;
                        reg-names = "control";
                };
                maskrom@1000 {
                        reg = <0x1000 0x2000>;
                        reg-names = "mem";
                };
                otp@20000 {
                        reg = <0x20000 0x2000 0x10010000 0x1000>;
                        reg-names = "mem", "control";
                };
                test: test@100000 {
                        compatible = "sifive,test0";
                        reg = <0x100000 0x1000>;
                        reg-names = "control";
                };
                clint: clint@2000000 {
                        compatible = "riscv,clint0";
                        interrupts-extended = <&hlic 3 &hlic 7>;
                        reg = <0x2000000 0x10000>;
                        reg-names = "control";
                };
                itim: itim@8000000 {
                        compatible = "sifive,itim0";
                        reg = <0x8000000 0x2000>;
                        reg-names = "mem";
                };
                plic: interrupt-controller@c000000 {
                        #interrupt-cells = <1>;
                        compatible = "riscv,plic0";
                        interrupt-controller;
                        interrupts-extended = <&hlic 11>;
                        reg = <0xc000000 0x4000000>;
                        reg-names = "control";
                        riscv,max-priority = <7>;
                        riscv,ndev = <64>;
                };
                aon: aon@10000000 {
                        compatible = "sifive,aon0";
                        reg = <0x10000000 0x8000>;
                        reg-names = "mem";
                };
                prci: prci@10008000 {
                        compatible = "sifive,fe310-g000,prci";
                        reg = <0x10008000 0x8000>;
                        reg-names = "mem";
                };
                gpio0: gpio@10012000 {
                        compatible = "sifive,gpio0";
                        interrupt-parent = <&plic>;
                        #gpio-cells = <1>;
                        interrupts = <8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
                                      23 24 25 26 27 28 29 30 31 32 33 34 35 36
                                      37 38 39>;
                        reg = <0x10012000 0x1000>;
                        reg-names = "control";
                };
                led-0 {
                        compatible = "sifive,gpio-leds";
                        label = "LD0red";
                        gpios = <&gpio0 22>;
                        linux,default-trigger = "none";
                };
                led-1 {
                        compatible = "sifive,gpio-leds";
                        label = "LD0green";
                        gpios = <&gpio0 19>;
                        linux,default-trigger = "none";
                };
                led-2 {
                        compatible = "sifive,gpio-leds";
                        label = "LD0blue";
                        gpios = <&gpio0 21>;
                        linux,default-trigger = "none";
                };
                uart0: serial@10013000 {
                        compatible = "sifive,uart0";
                        interrupt-parent = <&plic>;
                        interrupts = <3>;
                        reg = <0x10013000 0x1000>;
                        reg-names = "control";
                        clocks = <&hfclk>;
                        pinmux = <&gpio0 0x0 0x30000>;
                };
                spi0: spi@10014000 {
                        compatible = "sifive,spi0";
                        interrupt-parent = <&plic>;
                        interrupts = <5>;
                        reg = <0x10014000 0x1000 0x20000000 0x20000000>;
                        reg-names = "control", "mem";
                        clocks = <&hfclk>;
                        pinmux = <&gpio0 0x0 0x0>;
                        #address-cells = <1>;
                        #size-cells = <0>;
                        flash@0 {
                                compatible = "jedec,spi-nor";
                                reg = <0x0>;
                        };
                };
                hca0: hca@10018000 {
                    compatible = "sifive,hca-0.5";
                    interrupt-parent = <&plic>;
                    interrupts = <53 54>;
                    sifive,phyaddrwidth = <32>;
                    reg = <0x10018000 0x1000>;
                    reg-names = "control";
                };
                uart1: serial@10023000 {
                        compatible = "sifive,uart0";
                        interrupt-parent = <&plic>;
                        interrupts = <4>;
                        reg = <0x10023000 0x1000>;
                        reg-names = "control";
                        clocks = <&hfclk>;
                        pinmux = <&gpio0 0x0 0x840000>;
                };
                dtim: dtim@80000000 {
                        compatible = "sifive,dtim0";
                        reg = <0x80000000 0x400000>;
                        reg-names = "mem";
                };
        };
};
